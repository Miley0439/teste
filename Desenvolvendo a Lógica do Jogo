#include <stdio.h>
#include <string.h>

// Estrutura da carta com atributos relevantes
typedef struct {
    char nomePais[50];
    int populacao;
    float area;
    float pib;
    int pontosTuristicos;
    float densidadeDemografica;
} Carta;

// Função que calcula a densidade demográfica de um país
float calcularDensidade(int populacao, float area) {
    return (area > 0) ? populacao / area : 0;
}

// Função para exibir o menu de atributos disponíveis
void exibirMenu(int ignorar) {
    printf("Escolha um atributo para comparação:\n");
    if (ignorar != 1) printf("1 - População\n");
    if (ignorar != 2) printf("2 - Área\n");
    if (ignorar != 3) printf("3 - PIB\n");
    if (ignorar != 4) printf("4 - Pontos turísticos\n");
    if (ignorar != 5) printf("5 - Densidade demográfica\n");
}

// Retorna o valor do atributo selecionado da carta
float obterValorAtributo(Carta c, int atributo) {
    switch (atributo) {
        case 1: return c.populacao;
        case 2: return c.area;
        case 3: return c.pib;
        case 4: return c.pontosTuristicos;
        case 5: return c.densidadeDemografica;
        default: return 0;
    }
}

// Exibe o nome textual do atributo
void exibirNomeAtributo(int atributo) {
    switch (atributo) {
        case 1: printf("População"); break;
        case 2: printf("Área"); break;
        case 3: printf("PIB"); break;
        case 4: printf("Pontos turísticos"); break;
        case 5: printf("Densidade demográfica"); break;
        default: printf("Desconhecido");
    }
}

int main() {
    // Cartas fixas utilizadas na comparação
    Carta carta1 = {"Brasil", 215000000, 8515767.0, 2200.0, 200, 0.0};
    Carta carta2 = {"Canadá", 38000000, 9984670.0, 1800.0, 150, 0.0};

    // Cálculo da densidade demográfica para cada carta
    carta1.densidadeDemografica = calcularDensidade(carta1.populacao, carta1.area);
    carta2.densidadeDemografica = calcularDensidade(carta2.populacao, carta2.area);

    char continuar;
    int rodadas = 0, vitoriasC1 = 0, vitoriasC2 = 0, empates = 0;

    do {
        rodadas++;
        int atributo1 = 0, atributo2 = 0;

        // Escolha do primeiro atributo com validação
        do {
            printf("\n===== RODADA %d =====\n", rodadas);
            printf("Escolha o 1º atributo:\n");
            exibirMenu(0);
            printf("Digite a opção: ");
            scanf("%d", &atributo1);
            if (atributo1 < 1 || atributo1 > 5)
                printf("Opção inválida. Tente novamente.\n");
        } while (atributo1 < 1 || atributo1 > 5);

        // Escolha do segundo atributo com validação
        do {
            printf("\nEscolha o 2º atributo (diferente do primeiro):\n");
            exibirMenu(atributo1);
            printf("Digite a opção: ");
            scanf("%d", &atributo2);
            if (atributo2 < 1 || atributo2 > 5 || atributo2 == atributo1)
                printf("Opção inválida ou repetida. Tente novamente.\n");
        } while (atributo2 < 1 || atributo2 > 5 || atributo2 == atributo1);

        // Obtenção dos valores de atributos para ambas as cartas
        float valor1C1 = obterValorAtributo(carta1, atributo1);
        float valor1C2 = obterValorAtributo(carta2, atributo1);
        float valor2C1 = obterValorAtributo(carta1, atributo2);
        float valor2C2 = obterValorAtributo(carta2, atributo2);

        printf("\n--- Comparação dos Atributos ---\n");

        // Exibir dados do atributo 1
        printf("Atributo 1: ");
        exibirNomeAtributo(atributo1);
        printf("\n%s: %.2f\n%s: %.2f\n", carta1.nomePais, valor1C1, carta2.nomePais, valor1C2);

        // Determinar vencedor do atributo 1
        int vitoria1 = 0, vitoria2 = 0;
        if (atributo1 == 5) {
            (valor1C1 < valor1C2) ? vitoria1++ : (valor1C2 < valor1C1) ? vitoria2++ : 0;
        } else {
            (valor1C1 > valor1C2) ? vitoria1++ : (valor1C2 > valor1C1) ? vitoria2++ : 0;
        }

        // Exibir dados do atributo 2
        printf("\nAtributo 2: ");
        exibirNomeAtributo(atributo2);
        printf("\n%s: %.2f\n%s: %.2f\n", carta1.nomePais, valor2C1, carta2.nomePais, valor2C2);

        // Determinar vencedor do atributo 2
        if (atributo2 == 5) {
            (valor2C1 < valor2C2) ? vitoria1++ : (valor2C2 < valor2C1) ? vitoria2++ : 0;
        } else {
            (valor2C1 > valor2C2) ? vitoria1++ : (valor2C2 > valor2C1) ? vitoria2++ : 0;
        }

        // Soma total dos dois atributos para cada carta
        float somaC1 = valor1C1 + valor2C1;
        float somaC2 = valor1C2 + valor2C2;

        printf("\n--- Soma dos Atributos ---\n");
        printf("%s: %.2f\n", carta1.nomePais, somaC1);
        printf("%s: %.2f\n", carta2.nomePais, somaC2);

        printf("\n--- Resultado da Rodada ---\n");
        if (somaC1 > somaC2) {
            printf("Vencedor: %s\n", carta1.nomePais);
            vitoriasC1++;
        } else if (somaC2 > somaC1) {
            printf("Vencedor: %s\n", carta2.nomePais);
            vitoriasC2++;
        } else {
            printf("Empate!\n");
            empates++;
        }

        // Continuar?
        printf("\nDeseja jogar outra rodada? (s/n): ");
        scanf(" %c", &continuar);
    } while (continuar == 's' || continuar == 'S');

    // Resumo final
    printf("\n===== FIM DO JOGO =====\n");
    printf("Rodadas jogadas: %d\n", rodadas);
    printf("Vitórias do %s: %d\n", carta1.nomePais, vitoriasC1);
    printf("Vitórias do %s: %d\n", carta2.nomePais, vitoriasC2);
    printf("Empates: %d\n", empates);
    printf("Obrigado por jogar!\n");

    return 0;
